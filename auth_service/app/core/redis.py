# app/core/redis.py
from fastapi import FastAPI
import redis.asyncio as redis

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç Redis
redis_client: redis.Redis | None = None


async def init_redis(app: FastAPI) -> redis.Redis:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Redis –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    global redis_client
    try:
        redis_client = redis.Redis(
            host="auth_redis",  # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏–∑ docker-compose
            port=6379,
            decode_responses=True,
            socket_connect_timeout=5,
            socket_timeout=5
        )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await redis_client.ping()
        print("‚úÖ Redis –ø–æ–¥–∫–ª—é—á—ë–Ω")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ app.state –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ middleware
        app.state.redis = redis_client
        return redis_client

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis: {e}")
        redis_client = None
        app.state.redis = None
        return None


async def get_redis() -> redis.Redis:
    if redis_client is None:
        raise RuntimeError("Redis –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    return redis_client


# =======================
# –ü—Ä–∏–º–µ—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Redis
# =======================
async def set_refresh_token(user_id: int, token: str, expire_days: int):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç refresh token –≤ Redis
    """
    if redis_client is None:
        raise RuntimeError("Redis –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    await redis_client.setex(f"refresh_{user_id}", expire_days * 24 * 3600, token)


async def get_refresh_token(user_id: int) -> str | None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç refresh token –∏–∑ Redis
    """
    if redis_client is None:
        raise RuntimeError("Redis –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    return await redis_client.get(f"refresh_{user_id}")


async def close_redis():
    """
    –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Redis
    """
    global redis_client
    if redis_client:
        await redis_client.close()
        await redis_client.connection_pool.disconnect()
        print("üîí Redis –∑–∞–∫—Ä—ã—Ç")
        redis_client = None